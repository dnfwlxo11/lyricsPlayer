-- MySQL Script generated by MySQL Workbench
-- Mon Feb 14 15:16:33 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lyrics_player
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lyrics_player
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lyrics_player` DEFAULT CHARACTER SET utf8 ;
USE `lyrics_player` ;

-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_users` (
  `uid` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`uid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_musicians`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_musicians` (
  `mid` INT NOT NULL AUTO_INCREMENT,
  `musician_name` VARCHAR(45) NOT NULL,
  `thumbnail_path` VARCHAR(100) NULL,
  PRIMARY KEY (`mid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_albums` (
  `aid` INT NOT NULL AUTO_INCREMENT,
  `album_name` VARCHAR(45) NOT NULL,
  `tb_musicians_mid` INT NOT NULL,
  `thumbnail_path` VARCHAR(100) NULL,
  PRIMARY KEY (`aid`),
  INDEX `fk_tb_albums_tb_musicians_idx` (`tb_musicians_mid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_albums_tb_musicians`
    FOREIGN KEY (`tb_musicians_mid`)
    REFERENCES `lyrics_player`.`tb_musicians` (`mid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_songs` (
  `sid` INT NOT NULL AUTO_INCREMENT,
  `song_name` VARCHAR(45) NOT NULL,
  `playtime` VARCHAR(45) NOT NULL,
  `thumbnail_path` VARCHAR(100) NULL,
  `tb_albums_aid` INT NOT NULL,
  `album` VARCHAR(45) NULL,
  PRIMARY KEY (`sid`),
  INDEX `fk_tb_songs_tb_albums1_idx` (`tb_albums_aid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_songs_tb_albums1`
    FOREIGN KEY (`tb_albums_aid`)
    REFERENCES `lyrics_player`.`tb_albums` (`aid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_comments` (
  `cid` INT NOT NULL AUTO_INCREMENT,
  `comment` VARCHAR(200) NOT NULL,
  `tb_songs_sid` INT NOT NULL,
  `tb_users_uid` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `is_edited` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`cid`),
  INDEX `fk_tb_comments_tb_songs1_idx` (`tb_songs_sid` ASC) VISIBLE,
  INDEX `fk_tb_comments_tb_users1_idx` (`tb_users_uid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_comments_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lyrics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_comments_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lyrics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_song_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_song_likes` (
  `tb_songs_sid` INT NOT NULL,
  `tb_users_uid` INT NOT NULL,
  INDEX `fk_tb_song_like_tb_songs1_idx` (`tb_songs_sid` ASC) VISIBLE,
  INDEX `fk_tb_song_likes_tb_users1_idx` (`tb_users_uid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_song_like_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lyrics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_song_likes_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lyrics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_album_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_album_likes` (
  `tb_albums_aid` INT NOT NULL,
  `tb_users_uid` INT NOT NULL,
  INDEX `fk_tb_album_like_tb_albums1_idx` (`tb_albums_aid` ASC) VISIBLE,
  INDEX `fk_tb_album_likes_tb_users1_idx` (`tb_users_uid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_album_like_tb_albums1`
    FOREIGN KEY (`tb_albums_aid`)
    REFERENCES `lyrics_player`.`tb_albums` (`aid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_album_likes_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lyrics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_playlist` (
  `tb_users_uid` INT NOT NULL,
  `tb_songs_sid` INT NOT NULL,
  INDEX `fk_tb_playlist_tb_users1_idx` (`tb_users_uid` ASC) VISIBLE,
  INDEX `fk_tb_playlist_tb_songs1_idx` (`tb_songs_sid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_playlist_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lyrics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_playlist_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lyrics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lyrics_player`.`tb_comment_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lyrics_player`.`tb_comment_likes` (
  `tb_comments_cid` INT NOT NULL,
  `tb_users_uid` INT NOT NULL,
  INDEX `fk_tb_comment_likes_tb_comments1_idx` (`tb_comments_cid` ASC) VISIBLE,
  INDEX `fk_tb_comment_likes_tb_users1_idx` (`tb_users_uid` ASC) VISIBLE,
  CONSTRAINT `fk_tb_comment_likes_tb_comments1`
    FOREIGN KEY (`tb_comments_cid`)
    REFERENCES `lyrics_player`.`tb_comments` (`cid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_comment_likes_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lyrics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
