-- MySQL Script generated by MySQL Workbench
-- Tue Dec 28 11:32:03 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lylics_player
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lylics_player
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lylics_player` DEFAULT CHARACTER SET utf8 ;
USE `lylics_player` ;

-- -----------------------------------------------------
-- Table `lylics_player`.`tb_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_users` (
  `uid` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`uid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_musicians`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_musicians` (
  `mid` INT NOT NULL AUTO_INCREMENT,
  `musician_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`mid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_albums` (
  `aid` INT NOT NULL AUTO_INCREMENT,
  `album_name` VARCHAR(45) NOT NULL,
  `tb_musicians_mid` INT NOT NULL,
  `thumbnail_path` VARCHAR(100) NULL,
  PRIMARY KEY (`aid`),
  INDEX `fk_tb_albums_tb_musicians_idx` (`tb_musicians_mid` ASC),
  CONSTRAINT `fk_tb_albums_tb_musicians`
    FOREIGN KEY (`tb_musicians_mid`)
    REFERENCES `lylics_player`.`tb_musicians` (`mid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_songs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_songs` (
  `sid` INT NOT NULL AUTO_INCREMENT,
  `song_name` VARCHAR(45) NOT NULL,
  `playtime` VARCHAR(45) NOT NULL,
  `thumbnail_path` VARCHAR(100) NULL,
  `tb_albums_aid` INT NOT NULL,
  `album` VARCHAR(45) NULL,
  PRIMARY KEY (`sid`),
  INDEX `fk_tb_songs_tb_albums1_idx` (`tb_albums_aid` ASC),
  CONSTRAINT `fk_tb_songs_tb_albums1`
    FOREIGN KEY (`tb_albums_aid`)
    REFERENCES `lylics_player`.`tb_albums` (`aid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_comments` (
  `cid` INT NOT NULL AUTO_INCREMENT,
  `comment` VARCHAR(200) NOT NULL,
  `tb_songs_sid` INT NOT NULL,
  PRIMARY KEY (`cid`),
  INDEX `fk_tb_comments_tb_songs1_idx` (`tb_songs_sid` ASC),
  CONSTRAINT `fk_tb_comments_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lylics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_likes` (
  `lid` INT NOT NULL AUTO_INCREMENT,
  `cnt` INT NULL DEFAULT 0,
  `tb_albums_aid` INT NULL,
  `tb_songs_sid` INT NULL,
  `tb_users_uid` INT NULL,
  PRIMARY KEY (`lid`),
  INDEX `fk_likes_tb_albums1_idx` (`tb_albums_aid` ASC),
  INDEX `fk_likes_tb_songs1_idx` (`tb_songs_sid` ASC),
  INDEX `fk_likes_tb_users1_idx` (`tb_users_uid` ASC),
  CONSTRAINT `fk_likes_tb_albums1`
    FOREIGN KEY (`tb_albums_aid`)
    REFERENCES `lylics_player`.`tb_albums` (`aid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lylics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lylics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lylics_player`.`tb_subscribes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lylics_player`.`tb_subscribes` (
  `subid` INT NOT NULL,
  `cnt` INT NULL DEFAULT 0,
  `tb_albums_aid` INT NULL,
  `tb_users_uid` INT NULL,
  `tb_songs_sid` INT NULL,
  PRIMARY KEY (`subid`),
  INDEX `fk_subscribes_tb_albums1_idx` (`tb_albums_aid` ASC),
  INDEX `fk_subscribes_tb_users1_idx` (`tb_users_uid` ASC),
  INDEX `fk_subscribes_tb_songs1_idx` (`tb_songs_sid` ASC),
  CONSTRAINT `fk_subscribes_tb_albums1`
    FOREIGN KEY (`tb_albums_aid`)
    REFERENCES `lylics_player`.`tb_albums` (`aid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscribes_tb_users1`
    FOREIGN KEY (`tb_users_uid`)
    REFERENCES `lylics_player`.`tb_users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscribes_tb_songs1`
    FOREIGN KEY (`tb_songs_sid`)
    REFERENCES `lylics_player`.`tb_songs` (`sid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Insert Sample Data
-- -----------------------------------------------------

-- 뮤지션 추가
INSERT INTO tb_musicians(musician_name) VALUES ('대추');
INSERT INTO tb_musicians(musician_name) VALUES ('대인');

-- 앨범 및 노래 추가
INSERT INTO tb_albums(album_name, tb_musicians_mid, thumbnail_path) VALUES ('대추의 1집', (SELECT mid FROM tb_musicians WHERE musician_name='대추'), '@/assets/songs/persian.jpg');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('persian', '255', '@/assets/songs/persian.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 1집'), '대추');

-- 앨범 및 노래 추가
INSERT INTO tb_albums(album_name, tb_musicians_mid, thumbnail_path) VALUES ('대추의 1집', (SELECT mid FROM tb_musicians WHERE musician_name='대추'), '@/assets/songs/persian.jpg');
INSERT INTO tb_albums(album_name, tb_musicians_mid, thumbnail_path) VALUES ('대추의 2집', (SELECT mid FROM tb_musicians WHERE musician_name='대추'), '@/assets/songs/scotish.jpg');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('persian', '255', '@/assets/songs/persian.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 1집'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('british', '255', '@/assets/songs/british.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 1집'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('scotish', '255', '@/assets/songs/scotish.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 2집'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('russian', '255', '@/assets/songs/russian.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 2집'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('siam', '255', '@/assets/songs/siam.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 2집'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('regdoll', '255', '@/assets/songs/regdoll.jpg', (SELECT aid FROM tb_albums WHERE album_name='대추의 2집'), '대추');

INSERT INTO tb_albums(album_name, tb_musicians_mid, thumbnail_path) VALUES ('아침', (SELECT mid FROM tb_musicians WHERE musician_name='대추'), '@/assets/songs/cat1.jpg');
INSERT INTO tb_albums(album_name, tb_musicians_mid, thumbnail_path) VALUES ('저녁', (SELECT mid FROM tb_musicians WHERE musician_name='대추'), '@/assets/songs/cat4.jpg');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat1', '255', '@/assets/songs/cat1.jpg', (SELECT aid FROM tb_albums WHERE album_name='아침'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat2', '255', '@/assets/songs/cat2.jpg', (SELECT aid FROM tb_albums WHERE album_name='아침'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat3', '255', '@/assets/songs/cat3.jpg', (SELECT aid FROM tb_albums WHERE album_name='아침'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat4', '255', '@/assets/songs/cat4.jpg', (SELECT aid FROM tb_albums WHERE album_name='저녁'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat5', '255', '@/assets/songs/cat5.jpg', (SELECT aid FROM tb_albums WHERE album_name='저녁'), '대추');
INSERT INTO tb_songs(song_name, playtime, thumbnail_path, tb_albums_aid, album) VALUES ('cat6', '255', '@/assets/songs/cat6.jpg', (SELECT aid FROM tb_albums WHERE album_name='저녁'), '대추');