version: '3'
services:
  web_server:
    build:
      context: ./nodejs
    container_name: daein-nodejs
    image: daein-lyrics-nodejs
    restart: always
    environment:
      - TZ=Asia/Seoul
    ports:
      - "16000:3000"
    depends_on:
      - elasticsearch
      - audio_db
    networks:
      - elastic
  ai_server:
    build:
      context: ./fastapi
    container_name: daein-fastapi
    image: daein-lyrics-fastapi
    environment:
      - TZ=Asia/Seoul
    ports:
      - "8000:8000"
    networks:
      - elastic
  audio_db:
    build: 
      context: ./mariadb
      dockerfile: Dockerfile
    container_name: daein-mariadb
    image: daein-lyrics-mariadb
    restart: always
    environment: 
      - MYSQL_ROOT_PASSWORD=daein
      - TZ=Asia/Seoul
    ports:
      - "15000:3306"
    volumes:
      - ./mariadb/app/db:/var/lib/mysql
      - ./mariadb/app/backup:/backup
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elastic
  elasticsearch:
    build: 
      context: ./elasticsearch
      dockerfile: Dockerfile
    image: daein-lyrics-elastic
    container_name: daein-elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  kibana:
    build: 
      context: ./kibana
      dockerfile: Dockerfile
    image: daein-lyrics-kibana
    container_name: daein-kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic
  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    image: daein-lyrics-logstash
    container_name: daein-logstash
    volumes:
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml"
      - "./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf"
      - "./logstash/driver/mariadb-java-client-2.7.5.jar:/opt/logstash/vendor/jar/jdbc/mariadb-java-client-2.7.5.jar"
    ports:
      - "5001:5001"
    depends_on:
      - elasticsearch
    networks:
      - elastic

volumes:
  esdata01:
    driver: local

networks:
  elastic:
    driver: bridge
